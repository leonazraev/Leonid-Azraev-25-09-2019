{"remainingRequest":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","dependencies":[{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","mtime":1569523849777},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import data from \"../resources/data.js\";\nimport newyork from \"../resources/newyork\";\nimport jerusalem from \"../resources/Jerusalem.js\";\nimport munich from \"../resources/munich.js\";\nimport telavivweather from \"../resources/telavivweather\";\nvar state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: '',\n    tempC: '',\n    tempF: '',\n    WeatherText: ''\n  },\n  gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n  autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n  searchField: ''\n};\nvar getters = {\n  defaultLocation: function defaultLocation(state) {\n    return state.defaultLocation;\n  },\n  cityDetails: function cityDetails(state) {\n    return state.cityDetails;\n  },\n  gpURL: function gpURL(state) {\n    return state.gpURL;\n  }\n};\nvar actions = {\n  setUserLocationByDefault: function setUserLocationByDefault(contex) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      contex.state.defaultLocation = position;\n      contex.dispatch('getDefaultLocation');\n    });\n  },\n  getDefaultLocation: function getDefaultLocation(contex) {\n    var lat = contex.state.defaultLocation.coords.latitude;\n    var lon = contex.state.defaultLocation.coords.longitude;\n    var fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\n    console.log(data);\n    contex.state.cityDetails.city = data.EnglishName;\n    contex.state.cityDetails.key = data.Key;\n    contex.state.cityDetails.regionID = data.Country.ID;\n    /*\r\n          Vue.axios.get(fullURL)\r\n            .then(response => {\r\n              const data = response.data;\r\n              contex.state.cityDetails.city = data[0].EnglishName;\r\n              contex.state.cityDetails.key = data[0].Key;\r\n              contex.state.cityDetails.regionID = data.Country.ID;\r\n    \r\n            })\r\n            .catch(err => {\r\n    \r\n            })\r\n            */\n  },\n  userSearch: function userSearch(contex, userLocation) {\n    if (userLocation !== '' && userLocation !== undefined) {\n      var fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\n      console.log(userLocation);\n\n      if (userLocation.toLowerCase() === jerusalem[0].LocalizedName.toLowerCase()) {\n        contex.state.cityDetails.city = jerusalem[0].LocalizedName;\n        contex.state.cityDetails.key = jerusalem[0].Key;\n        contex.state.cityDetails.regionID = jerusalem[0].Country.ID;\n      }\n\n      if (userLocation.toLowerCase() === newyork[0].LocalizedName.toLowerCase()) {\n        contex.state.cityDetails.city = newyork[0].LocalizedName;\n        contex.state.cityDetails.key = newyork[0].Key;\n        contex.state.cityDetails.regionID = newyork[0].Country.ID;\n      }\n\n      if (userLocation.toLowerCase() === munich[0].LocalizedName.toLowerCase()) {\n        contex.state.cityDetails.city = munich[0].LocalizedName;\n        contex.state.cityDetails.key = munich[0].Key;\n        contex.state.cityDetails.regionID = munich[0].Country.ID;\n        contex.dispatch('getWeather');\n      }\n      /*\r\n      Vue.axios.get(fullURL)\r\n      .then(response =>{\r\n           const data = response.data;\r\n        contex.state.cityDetails.city = data[0].LocalizedName;\r\n        contex.state.cityDetails.key = data[0].Key;\r\n        contex.state.cityDetails.regionID = data[0].Country.ID;\r\n         })\r\n      .catch( err=>{\r\n        \r\n      })\r\n      */\n\n    }\n  },\n  getWeather: function getWeather(contex, key) {\n    contex.state.cityDetails.tempC = telavivweather[0].Temperature.Metric.Value;\n    contex.state.cityDetails.tempF = telavivweather[0].Temperature.Imperial.Value;\n    contex.state.cityDetails.WeatherText = telavivweather[0].WeatherText;\n  }\n};\nvar mutations = {};\nexport default {\n  mutations: mutations,\n  actions: actions,\n  getters: getters,\n  state: state\n};",{"version":3,"sources":["C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js"],"names":["data","newyork","jerusalem","munich","telavivweather","state","defaultLocation","cityDetails","key","regionID","city","tempC","tempF","WeatherText","gpURL","autoCompSearchURL","searchField","getters","actions","setUserLocationByDefault","contex","navigator","geolocation","getCurrentPosition","position","dispatch","getDefaultLocation","lat","coords","latitude","lon","longitude","fullURL","console","log","EnglishName","Key","Country","ID","userSearch","userLocation","undefined","toLowerCase","LocalizedName","getWeather","Temperature","Metric","Value","Imperial","mutations"],"mappings":"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","sourcesContent":["import data from '../resources/data.js'\r\nimport newyork from '../resources/newyork'\r\nimport jerusalem from '../resources/Jerusalem.js'\r\nimport munich from '../resources/munich.js'\r\nimport telavivweather from '../resources/telavivweather'\r\nconst state = {\r\n  defaultLocation: null,\r\n  cityDetails: {\r\n    key: '',\r\n    regionID: '',\r\n    city: '',\r\n    tempC: '',\r\n    tempF: '',\r\n    WeatherText: ''\r\n\r\n  },\r\n  gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\r\n  autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\r\n  searchField: ''\r\n}\r\nconst getters = {\r\n  defaultLocation: state => {\r\n    return state.defaultLocation;\r\n  },\r\n  cityDetails: state => {\r\n    return state.cityDetails;\r\n  },\r\n  gpURL: state => {\r\n    return state.gpURL;\r\n  },\r\n}\r\nconst actions = {\r\n  setUserLocationByDefault: contex => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      contex.state.defaultLocation = position;\r\n      contex.dispatch('getDefaultLocation')\r\n    })\r\n  },\r\n  getDefaultLocation: contex => {\r\n\r\n    const lat = contex.state.defaultLocation.coords.latitude;\r\n    const lon = contex.state.defaultLocation.coords.longitude;\r\n    const fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\r\n    console.log(data)\r\n    contex.state.cityDetails.city = data.EnglishName;\r\n    contex.state.cityDetails.key = data.Key;\r\n    contex.state.cityDetails.regionID = data.Country.ID;\r\n\r\n    /*\r\n          Vue.axios.get(fullURL)\r\n            .then(response => {\r\n              const data = response.data;\r\n              contex.state.cityDetails.city = data[0].EnglishName;\r\n              contex.state.cityDetails.key = data[0].Key;\r\n              contex.state.cityDetails.regionID = data.Country.ID;\r\n    \r\n            })\r\n            .catch(err => {\r\n    \r\n            })\r\n            */\r\n\r\n  },\r\n  userSearch: (contex, userLocation) => {\r\n    if (userLocation !== '' && userLocation !== undefined) {\r\n      const fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\r\n      console.log(userLocation);\r\n      if (userLocation.toLowerCase() === jerusalem[0].LocalizedName.toLowerCase()) {\r\n        contex.state.cityDetails.city = jerusalem[0].LocalizedName;\r\n        contex.state.cityDetails.key = jerusalem[0].Key;\r\n        contex.state.cityDetails.regionID = jerusalem[0].Country.ID;\r\n      }\r\n      if (userLocation.toLowerCase() === newyork[0].LocalizedName.toLowerCase()) {\r\n        contex.state.cityDetails.city = newyork[0].LocalizedName;\r\n        contex.state.cityDetails.key = newyork[0].Key;\r\n        contex.state.cityDetails.regionID = newyork[0].Country.ID;\r\n      }\r\n      if (userLocation.toLowerCase() === munich[0].LocalizedName.toLowerCase()) {\r\n        contex.state.cityDetails.city = munich[0].LocalizedName;\r\n        contex.state.cityDetails.key = munich[0].Key;\r\n        contex.state.cityDetails.regionID = munich[0].Country.ID;\r\n        contex.dispatch('getWeather')\r\n      }\r\n\r\n\r\n\r\n      /*\r\n      Vue.axios.get(fullURL)\r\n      .then(response =>{\r\n \r\n        const data = response.data;\r\n        contex.state.cityDetails.city = data[0].LocalizedName;\r\n        contex.state.cityDetails.key = data[0].Key;\r\n        contex.state.cityDetails.regionID = data[0].Country.ID;\r\n \r\n      })\r\n      .catch( err=>{\r\n        \r\n      })\r\n      */\r\n    }\r\n  },\r\n  getWeather: (contex, key) => {\r\n    contex.state.cityDetails.tempC = telavivweather[0].Temperature.Metric.Value;\r\n    contex.state.cityDetails.tempF = telavivweather[0].Temperature.Imperial.Value;\r\n    contex.state.cityDetails.WeatherText = telavivweather[0].WeatherText;\r\n  }\r\n\r\n}\r\nconst mutations = {\r\n\r\n}\r\n\r\nexport default {\r\n  mutations,\r\n  actions,\r\n  getters,\r\n  state\r\n}"]}]}