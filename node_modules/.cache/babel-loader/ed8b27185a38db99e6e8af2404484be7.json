{"remainingRequest":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","dependencies":[{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","mtime":1569516400589},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: ''\n  },\n  gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n  autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n  searchField: ''\n};\nvar getters = {\n  defaultLocation: function defaultLocation(state) {\n    return state.defaultLocation;\n  },\n  cityDetails: function cityDetails(state) {\n    return state.cityDetails;\n  },\n  gpURL: function gpURL(state) {\n    return state.gpURL;\n  }\n};\nvar actions = {\n  setUserLocationByDefault: function setUserLocationByDefault(contex) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      contex.state.defaultLocation = position;\n      contex.dispatch('getDefaultLocation');\n    });\n  },\n  getDefaultLocation: function getDefaultLocation(contex) {\n    var lat = contex.state.defaultLocation.coords.latitude;\n    var lon = contex.state.defaultLocation.coords.longitude;\n    var fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\n    console.log(data);\n    contex.state.cityDetails.city = data.EnglishName;\n    contex.state.cityDetails.key = data.Key;\n    contex.state.cityDetails.regionID = data.Country.ID;\n    /*\r\n          Vue.axios.get(fullURL)\r\n            .then(response => {\r\n              const data = response.data;\r\n              contex.state.cityDetails.city = data[0].EnglishName;\r\n              contex.state.cityDetails.key = data[0].Key;\r\n              contex.state.cityDetails.regionID = data.Country.ID;\r\n    \r\n            })\r\n            .catch(err => {\r\n    \r\n            })\r\n            */\n  },\n  userSearch: function userSearch(contex, userLocation) {\n    if (userLocation !== '' && userLocation !== undefined) {\n      var fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\n      console.log(contex.state.fullURL);\n      contex.state.cityDetails.city = autocomplete[0].LocalizedName;\n      contex.state.cityDetails.key = daautocompleteta[0].Key;\n      contex.state.cityDetails.regionID = autocomplete[0].Country.ID;\n      /*\r\n      Vue.axios.get(fullURL)\r\n      .then(response =>{\r\n            const data = response.data;\r\n        contex.state.cityDetails.city = data[0].LocalizedName;\r\n        contex.state.cityDetails.key = data[0].Key;\r\n        contex.state.cityDetails.regionID = data[0].Country.ID;\r\n          })\r\n      .catch( err=>{\r\n        \r\n      })\r\n      */\n    }\n  }\n};\nvar mutations = {};\nexport default {\n  mutations: mutations,\n  actions: actions,\n  getters: getters,\n  state: state\n};",{"version":3,"sources":["C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js"],"names":["state","defaultLocation","cityDetails","key","regionID","city","gpURL","autoCompSearchURL","searchField","getters","actions","setUserLocationByDefault","contex","navigator","geolocation","getCurrentPosition","position","dispatch","getDefaultLocation","lat","coords","latitude","lon","longitude","fullURL","console","log","data","EnglishName","Key","Country","ID","userSearch","userLocation","undefined","autocomplete","LocalizedName","daautocompleteta","mutations"],"mappings":"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","sourcesContent":["const state = {\r\n    defaultLocation: null,\r\n    cityDetails: {\r\n        key: '',\r\n        regionID: '',\r\n        city: '',\r\n\r\n    },\r\n    gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\r\n    autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\r\n    searchField: ''\r\n}\r\nconst getters = {\r\n    defaultLocation: state => {\r\n        return state.defaultLocation;\r\n      },\r\n      cityDetails: state => {\r\n        return state.cityDetails;\r\n      },\r\n      gpURL: state => {\r\n        return state.gpURL;\r\n      },\r\n}\r\nconst actions = {\r\n    setUserLocationByDefault: contex => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          contex.state.defaultLocation = position;\r\n          contex.dispatch('getDefaultLocation')\r\n        })\r\n      },\r\n      getDefaultLocation: contex => {\r\n  \r\n        const lat = contex.state.defaultLocation.coords.latitude;\r\n        const lon = contex.state.defaultLocation.coords.longitude;\r\n        const fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\r\n        console.log(data)\r\n        contex.state.cityDetails.city = data.EnglishName;\r\n        contex.state.cityDetails.key = data.Key;\r\n        contex.state.cityDetails.regionID = data.Country.ID;\r\n  \r\n        /*\r\n              Vue.axios.get(fullURL)\r\n                .then(response => {\r\n                  const data = response.data;\r\n                  contex.state.cityDetails.city = data[0].EnglishName;\r\n                  contex.state.cityDetails.key = data[0].Key;\r\n                  contex.state.cityDetails.regionID = data.Country.ID;\r\n        \r\n                })\r\n                .catch(err => {\r\n        \r\n                })\r\n                */\r\n  \r\n      },\r\n      userSearch: (contex, userLocation) => {\r\n        if (userLocation !== '' && userLocation !== undefined) {\r\n          const fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\r\n          console.log(contex.state.fullURL);\r\n  \r\n          contex.state.cityDetails.city = autocomplete[0].LocalizedName;\r\n          contex.state.cityDetails.key = daautocompleteta[0].Key;\r\n          contex.state.cityDetails.regionID = autocomplete[0].Country.ID;\r\n  \r\n          /*\r\n          Vue.axios.get(fullURL)\r\n          .then(response =>{\r\n  \r\n            const data = response.data;\r\n            contex.state.cityDetails.city = data[0].LocalizedName;\r\n            contex.state.cityDetails.key = data[0].Key;\r\n            contex.state.cityDetails.regionID = data[0].Country.ID;\r\n  \r\n          })\r\n          .catch( err=>{\r\n            \r\n          })\r\n          */\r\n        }\r\n      },\r\n}\r\nconst mutations = {\r\n\r\n}\r\n\r\nexport default {\r\n    mutations,\r\n    actions,\r\n    getters,\r\n    state\r\n}"]}]}