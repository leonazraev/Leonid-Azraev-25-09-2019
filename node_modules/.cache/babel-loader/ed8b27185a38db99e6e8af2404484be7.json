{"remainingRequest":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","dependencies":[{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js","mtime":1569732242571},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nvar state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: '',\n    tempC: '',\n    tempF: '',\n    WeatherText: '',\n    fiveForecast: []\n  },\n  gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=',\n  autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=',\n  conditionURL: 'http://dataservice.accuweather.com/currentconditions/v1/',\n  fiveForecastURL: 'http://dataservice.accuweather.com/forecasts/v1/daily/5day/',\n  apikey: '5G65jtjwb8BPPuEdR1ngGVbd5VsWyU9X',\n  searchField: '',\n  autoCompleteTxT: [],\n  autoCompleteKey: []\n};\nvar getters = {\n  defaultLocation: function defaultLocation(state) {\n    return state.defaultLocation;\n  },\n  cityDetails: function cityDetails(state) {\n    return state.cityDetails;\n  },\n  gpURL: function gpURL(state) {\n    return state.gpURL;\n  },\n  fiveForecast: function fiveForecast(state) {\n    return state.cityDetails.fiveForecast;\n  },\n  getAutoCompleteTxT: function getAutoCompleteTxT(state) {\n    return state.autoCompleteTxT;\n  }\n};\nvar actions = {\n  setUserLocationByDefault: function setUserLocationByDefault(contex) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      contex.state.defaultLocation = position;\n      contex.dispatch('getDefaultLocation');\n    });\n  },\n  getDefaultLocation: function getDefaultLocation(contex) {\n    var lat = contex.state.defaultLocation.coords.latitude;\n    var lon = contex.state.defaultLocation.coords.longitude;\n    var fullURL = contex.getters.gpURL + contex.state.apikey + '&q=' + lat + '%2C' + lon + '&language=en&toplevel=true';\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data;\n      contex.state.cityDetails.city = data.EnglishName;\n      contex.state.cityDetails.key = data.Key;\n      contex.state.cityDetails.regionID = data.Country.ID;\n      contex.dispatch('getWeather');\n      contex.dispatch('getFiveForecast');\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  getWeather: function getWeather(contex) {\n    var key = contex.state.cityDetails.key;\n    var fullURL = contex.state.conditionURL + key + \"?apikey=\" + contex.state.apikey + \"&language=en&details=true\";\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data;\n      contex.state.cityDetails.tempC = data[0].Temperature.Metric.Value;\n      contex.state.cityDetails.tempF = data[0].Temperature.Imperial.Value;\n      contex.state.cityDetails.WeatherText = data[0].WeatherText;\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  getFiveForecast: function getFiveForecast(contex) {\n    var key = contex.state.cityDetails.key;\n    var fullURL = contex.state.fiveForecastURL + key + \"?apikey=\" + contex.state.apikey + \"&language=en&details=true&metric=true\";\n    var Days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu'];\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data.DailyForecasts;\n      var days = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var day = {\n          Day: Days[i],\n          Temperature: data[i].Temperature.Maximum.Value\n        };\n        days.push(day);\n      }\n\n      contex.state.cityDetails.fiveForecast = days;\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  setAutoComplete: function setAutoComplete(contex, search) {\n    if (search !== '' && search !== undefined) {\n      var found = contex.state.autoCompleteKey.find(function (e) {\n        return e.cityNameDesc === search;\n      });\n\n      if (typeof found !== 'undefined') {\n        contex.state.cityDetails.city = found.cityName;\n        contex.state.cityDetails.key = found.key;\n        contex.state.cityDetails.regionID = found.ID;\n        contex.dispatch('getWeather');\n        contex.dispatch('getFiveForecast');\n      } else {\n        var fullURL = contex.state.autoCompSearchURL + contex.state.apikey + '&q=' + search + '&language=en';\n        Vue.axios.get(fullURL).then(function (response) {\n          var data = response.data;\n          contex.state.autoCompleteTxT = [];\n          contex.state.autoCompleteKey = [];\n\n          for (var i = 0; i < data.length; i++) {\n            contex.state.autoCompleteTxT.push(data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName);\n            var city = {\n              key: data[i].Key,\n              cityNameDesc: data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName,\n              ID: data[i].Country.ID,\n              cityName: data[i].LocalizedName\n            };\n            contex.state.autoCompleteKey.push(city);\n          }\n        }).catch(function (err) {\n          Vue.toasted.show(err.message, contex.getters.toastOptions);\n        });\n      }\n    }\n  }\n};\nvar mutations = {};\nexport default {\n  mutations: mutations,\n  actions: actions,\n  getters: getters,\n  state: state\n};",{"version":3,"sources":["C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\home.js"],"names":["Vue","state","defaultLocation","cityDetails","key","regionID","city","tempC","tempF","WeatherText","fiveForecast","gpURL","autoCompSearchURL","conditionURL","fiveForecastURL","apikey","searchField","autoCompleteTxT","autoCompleteKey","getters","getAutoCompleteTxT","actions","setUserLocationByDefault","contex","navigator","geolocation","getCurrentPosition","position","dispatch","getDefaultLocation","lat","coords","latitude","lon","longitude","fullURL","axios","get","then","response","data","EnglishName","Key","Country","ID","catch","err","toasted","show","message","toastOptions","getWeather","Temperature","Metric","Value","Imperial","getFiveForecast","Days","DailyForecasts","days","i","length","day","Day","Maximum","push","setAutoComplete","search","undefined","found","find","e","cityNameDesc","cityName","LocalizedName","mutations"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nconst state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: '',\n    tempC: '',\n    tempF: '',\n    WeatherText: '',\n    fiveForecast: [],\n\n  },\n  gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=',\n  autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=',\n  conditionURL: 'http://dataservice.accuweather.com/currentconditions/v1/',\n  fiveForecastURL: 'http://dataservice.accuweather.com/forecasts/v1/daily/5day/',\n  apikey: '5G65jtjwb8BPPuEdR1ngGVbd5VsWyU9X',\n  searchField: '',\n  autoCompleteTxT: [],\n  autoCompleteKey:[]\n\n}\nconst getters = {\n  defaultLocation: state => {\n    return state.defaultLocation;\n  },\n  cityDetails: state => {\n    return state.cityDetails;\n  },\n  gpURL: state => {\n    return state.gpURL;\n  },\n  fiveForecast: state =>{\n    return state.cityDetails.fiveForecast;\n  },\n  getAutoCompleteTxT: state =>{\n    return state.autoCompleteTxT;\n  }\n}\nconst actions = {\n  setUserLocationByDefault: contex => {\n    navigator.geolocation.getCurrentPosition(position => {\n      contex.state.defaultLocation = position;\n\n      contex.dispatch('getDefaultLocation')\n    })\n  },\n  getDefaultLocation: contex => {\n\n    const lat = contex.state.defaultLocation.coords.latitude;\n    const lon = contex.state.defaultLocation.coords.longitude;\n    const fullURL = contex.getters.gpURL + contex.state.apikey+ '&q=' + lat + '%2C' + lon + '&language=en&toplevel=true';\n\n          Vue.axios.get(fullURL)\n            .then(response => {\n              const data = response.data;\n              contex.state.cityDetails.city = data.EnglishName;\n              contex.state.cityDetails.key = data.Key;\n              contex.state.cityDetails.regionID = data.Country.ID;\n              contex.dispatch('getWeather');\n              contex.dispatch('getFiveForecast');\n            })\n            .catch(err => {\n              Vue.toasted.show(err.message,contex.getters.toastOptions);\n\n            })\n            \n\n  },\n  getWeather: contex => {\n    const key = contex.state.cityDetails.key;\n    const fullURL = contex.state.conditionURL + key + \"?apikey=\" + contex.state.apikey+ \"&language=en&details=true\";\n    Vue.axios.get(fullURL)\n    .then(response =>{\n      const data = response.data;\n      contex.state.cityDetails.tempC = data[0].Temperature.Metric.Value;\n      contex.state.cityDetails.tempF = data[0].Temperature.Imperial.Value;\n      contex.state.cityDetails.WeatherText = data[0].WeatherText;\n    })\n    .catch( err=>{\n      Vue.toasted.show(err.message,contex.getters.toastOptions);\n    })\n  },\n  getFiveForecast: contex =>{\n\n    const key = contex.state.cityDetails.key;\n    const fullURL = contex.state.fiveForecastURL + key + \"?apikey=\"+ contex.state.apikey+ \"&language=en&details=true&metric=true\";\n    let Days = ['Sun', 'Mon' , 'Tue' ,'Wed','Thu'];\n    Vue.axios.get(fullURL)\n    .then(response =>{\n      const data = response.data.DailyForecasts;\n      const days =[];\n      for(let i=0;i<data.length;i++)\n      { \n          const day = {Day: Days[i] , Temperature: data[i].Temperature.Maximum.Value};\n          \n          days.push(day);\n      }\n      contex.state.cityDetails.fiveForecast = days;\n\n   \n    })\n    .catch( err=>{\n      Vue.toasted.show(err.message,contex.getters.toastOptions);    })\n  },\n  setAutoComplete: (contex,search) =>{\n\n    if (search !== '' && search !== undefined) {\n\n      const found = contex.state.autoCompleteKey.find(e=> e.cityNameDesc === search);\n      if((typeof found) !== 'undefined')\n      {\n        contex.state.cityDetails.city = found.cityName;\n        contex.state.cityDetails.key = found.key;\n        contex.state.cityDetails.regionID = found.ID;\n        contex.dispatch('getWeather');\n        contex.dispatch('getFiveForecast');\n      }\n      else{\n      const fullURL = contex.state.autoCompSearchURL + contex.state.apikey + '&q=' + search + '&language=en';\n      Vue.axios.get(fullURL)\n      .then(response =>{\n        const data = response.data;\n        contex.state.autoCompleteTxT = [];\n        contex.state.autoCompleteKey = [];\n        for(let i=0 ; i < data.length ; i++)\n        {\n          contex.state.autoCompleteTxT.push(data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName);\n          const city = {key: data[i].Key\n          ,cityNameDesc: data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName\n          ,ID: data[i].Country.ID\n          ,cityName:  data[i].LocalizedName}\n          contex.state.autoCompleteKey.push(city);\n        }\n      })\n      .catch( err=>{\n        Vue.toasted.show(err.message,contex.getters.toastOptions);\n\n      })\n    }\n      \n    }\n\n}\n}\n\nconst mutations = {\n\n}\n\nexport default {\n  mutations,\n  actions,\n  getters,\n  state\n}"]}]}