{"remainingRequest":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\store.js","dependencies":[{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\store.js","mtime":1569514909983},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport data from \"./data.js\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    defaultLocation: null,\n    favorites: [],\n    cityDetails: {\n      key: '',\n      regionID: '',\n      city: '',\n      isFavorite: false\n    },\n    gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n    autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n    searchField: ''\n  },\n  getters: {\n    defaultLocation: function defaultLocation(state) {\n      return state.defaultLocation;\n    },\n    cityDetails: function cityDetails(state) {\n      return state.cityDetails;\n    },\n    gpURL: function gpURL(state) {\n      return state.gpURL;\n    }\n  },\n  mutations: {},\n  actions: {\n    setUserLocationByDefault: function setUserLocationByDefault(contex) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        contex.state.defaultLocation = position;\n        contex.dispatch('getDefaultLocation');\n      });\n    },\n    getDefaultLocation: function getDefaultLocation(contex) {\n      var lat = contex.state.defaultLocation.coords.latitude;\n      var lon = contex.state.defaultLocation.coords.longitude;\n      var fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\n      contex.state.cityDetails.city = data[0].EnglishName;\n      contex.state.cityDetails.key = data[0].Key;\n      contex.state.cityDetails.regionID = data.Country.ID;\n      /*\n            Vue.axios.get(fullURL)\n              .then(response => {\n                const data = response.data;\n                contex.state.cityDetails.city = data[0].EnglishName;\n                contex.state.cityDetails.key = data[0].Key;\n                contex.state.cityDetails.regionID = data.Country.ID;\n      \n              })\n              .catch(err => {\n      \n              })\n              */\n    },\n    userSearch: function userSearch(contex, userLocation) {\n      if (userLocation !== '' && userLocation !== undefined) {\n        var fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\n        console.log(contex.state.fullURL);\n        Vue.axios.get(fullURL).then(function (response) {\n          var data = response.data;\n          contex.state.cityDetails.city = data[0].LocalizedName;\n          contex.state.cityDetails.key = data[0].Key;\n          contex.state.cityDetails.regionID = data[0].Country.ID;\n        }).catch(function (err) {});\n      }\n    }\n  },\n  modules: {}\n});",{"version":3,"sources":["C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\store.js"],"names":["Vue","Vuex","data","use","Store","state","defaultLocation","favorites","cityDetails","key","regionID","city","isFavorite","gpURL","autoCompSearchURL","searchField","getters","mutations","actions","setUserLocationByDefault","contex","navigator","geolocation","getCurrentPosition","position","dispatch","getDefaultLocation","lat","coords","latitude","lon","longitude","fullURL","EnglishName","Key","Country","ID","userSearch","userLocation","undefined","console","log","axios","get","then","response","LocalizedName","catch","err","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport data from './data.js'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    defaultLocation: null,\n    favorites: [],\n    cityDetails: {\n      key: '',\n      regionID: '',\n      city: '',\n      isFavorite: false\n\n    },\n    gpURL: 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n    autoCompSearchURL: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=girsYVPga63NrUmnAGYfhj2OGbPtUT3T&q=',\n    searchField: ''\n\n  },\n  getters: {\n    defaultLocation: state => {\n      return state.defaultLocation;\n    },\n    cityDetails: state => {\n      return state.cityDetails;\n    },\n    gpURL: state => {\n      return state.gpURL;\n    },\n  },\n  mutations: {\n\n  },\n  actions: {\n\n    setUserLocationByDefault: contex => {\n      navigator.geolocation.getCurrentPosition(position => {\n        contex.state.defaultLocation = position;\n        contex.dispatch('getDefaultLocation')\n      })\n    },\n    getDefaultLocation: contex => {\n\n      const lat = contex.state.defaultLocation.coords.latitude;\n      const lon = contex.state.defaultLocation.coords.longitude;\n      const fullURL = contex.getters.gpURL + lat + '%2C' + lon + '&language=en&toplevel=true';\n\n      contex.state.cityDetails.city = data[0].EnglishName;\n      contex.state.cityDetails.key = data[0].Key;\n      contex.state.cityDetails.regionID = data.Country.ID;\n\n/*\n      Vue.axios.get(fullURL)\n        .then(response => {\n          const data = response.data;\n          contex.state.cityDetails.city = data[0].EnglishName;\n          contex.state.cityDetails.key = data[0].Key;\n          contex.state.cityDetails.regionID = data.Country.ID;\n\n        })\n        .catch(err => {\n\n        })\n        */\n\n    },\n    userSearch: (contex, userLocation) => {\n      if (userLocation !== '' && userLocation !== undefined) {\n        const fullURL = contex.state.autoCompSearchURL + userLocation + '&language=en';\n        console.log(contex.state.fullURL);\n        Vue.axios.get(fullURL)\n        .then(response =>{\n\n          const data = response.data;\n          contex.state.cityDetails.city = data[0].LocalizedName;\n          contex.state.cityDetails.key = data[0].Key;\n          contex.state.cityDetails.regionID = data[0].Country.ID;\n\n        })\n        .catch( err=>{\n          \n        })\n      }\n    }\n  },\n  modules: {\n\n  }\n})\n"]}]}