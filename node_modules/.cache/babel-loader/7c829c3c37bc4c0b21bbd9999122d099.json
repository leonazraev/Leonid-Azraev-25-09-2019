{"remainingRequest":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\location.js","dependencies":[{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\location.js","mtime":1569733631555},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nvar state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: '',\n    tempC: '',\n    tempF: '',\n    WeatherText: '',\n    fiveForecast: []\n  },\n  searchField: '',\n  autoCompleteTxT: [],\n  autoCompleteKey: []\n};\nvar getters = {\n  defaultLocation: function defaultLocation(state) {\n    return state.defaultLocation;\n  },\n  cityDetails: function cityDetails(state) {\n    return state.cityDetails;\n  },\n  fiveForecast: function fiveForecast(state) {\n    return state.cityDetails.fiveForecast;\n  },\n  getAutoCompleteTxT: function getAutoCompleteTxT(state) {\n    return state.autoCompleteTxT;\n  }\n};\nvar actions = {\n  setUserLocationByDefault: function setUserLocationByDefault(contex) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      contex.state.defaultLocation = position;\n      contex.dispatch('getDefaultLocation');\n    });\n  },\n  getDefaultLocation: function getDefaultLocation(contex) {\n    var lat = contex.state.defaultLocation.coords.latitude;\n    var lon = contex.state.defaultLocation.coords.longitude;\n    var fullURL = contex.getters.gpURL + contex.getters.apikey + '&q=' + lat + '%2C' + lon + '&language=en&toplevel=true';\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data;\n      contex.state.cityDetails.city = data.EnglishName;\n      contex.state.cityDetails.key = data.Key;\n      contex.state.cityDetails.regionID = data.Country.ID;\n      contex.dispatch('getWeather');\n      contex.dispatch('getFiveForecast');\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  getWeather: function getWeather(contex) {\n    var key = contex.state.cityDetails.key;\n    var fullURL = contex.getters.conditionURL + key + \"?apikey=\" + contex.getters.apikey + \"&language=en&details=true\";\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data;\n      contex.state.cityDetails.tempC = data[0].Temperature.Metric.Value;\n      contex.state.cityDetails.tempF = data[0].Temperature.Imperial.Value;\n      contex.state.cityDetails.WeatherText = data[0].WeatherText;\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  getFiveForecast: function getFiveForecast(contex) {\n    var key = contex.state.cityDetails.key;\n    var fullURL = contex.getters.fiveForecastURL + key + \"?apikey=\" + contex.getters.apikey + \"&language=en&details=true&metric=true\";\n    var Days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu'];\n    Vue.axios.get(fullURL).then(function (response) {\n      var data = response.data.DailyForecasts;\n      var days = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var day = {\n          Day: Days[i],\n          Temperature: data[i].Temperature.Maximum.Value\n        };\n        days.push(day);\n      }\n\n      contex.state.cityDetails.fiveForecast = days;\n    }).catch(function (err) {\n      Vue.toasted.show(err.message, contex.getters.toastOptions);\n    });\n  },\n  setAutoComplete: function setAutoComplete(contex, search) {\n    if (search !== '' && search !== undefined) {\n      var found = contex.state.autoCompleteKey.find(function (e) {\n        return e.cityNameDesc === search;\n      });\n\n      if (typeof found !== 'undefined') {\n        contex.state.cityDetails.city = found.cityName;\n        contex.state.cityDetails.key = found.key;\n        contex.state.cityDetails.regionID = found.ID;\n        contex.dispatch('getWeather');\n        contex.dispatch('getFiveForecast');\n      } else {\n        var fullURL = contex.getters.autoCompSearchURL + contex.getters.apikey + '&q=' + search + '&language=en';\n        Vue.axios.get(fullURL).then(function (response) {\n          var data = response.data;\n          contex.state.autoCompleteTxT = [];\n          contex.state.autoCompleteKey = [];\n\n          for (var i = 0; i < data.length; i++) {\n            contex.state.autoCompleteTxT.push(data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName);\n            var city = {\n              key: data[i].Key,\n              cityNameDesc: data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName,\n              ID: data[i].Country.ID,\n              cityName: data[i].LocalizedName\n            };\n            contex.state.autoCompleteKey.push(city);\n          }\n        }).catch(function (err) {\n          Vue.toasted.show(err.message, contex.getters.toastOptions);\n        });\n      }\n    }\n  }\n};\nvar mutations = {};\nexport default {\n  mutations: mutations,\n  actions: actions,\n  getters: getters,\n  state: state\n};",{"version":3,"sources":["C:\\Users\\LeonAzraev\\Desktop\\AcuWeather\\weatherapp\\src\\Modeules\\location.js"],"names":["Vue","state","defaultLocation","cityDetails","key","regionID","city","tempC","tempF","WeatherText","fiveForecast","searchField","autoCompleteTxT","autoCompleteKey","getters","getAutoCompleteTxT","actions","setUserLocationByDefault","contex","navigator","geolocation","getCurrentPosition","position","dispatch","getDefaultLocation","lat","coords","latitude","lon","longitude","fullURL","gpURL","apikey","axios","get","then","response","data","EnglishName","Key","Country","ID","catch","err","toasted","show","message","toastOptions","getWeather","conditionURL","Temperature","Metric","Value","Imperial","getFiveForecast","fiveForecastURL","Days","DailyForecasts","days","i","length","day","Day","Maximum","push","setAutoComplete","search","undefined","found","find","e","cityNameDesc","cityName","autoCompSearchURL","LocalizedName","mutations"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nconst state = {\n  defaultLocation: null,\n  cityDetails: {\n    key: '',\n    regionID: '',\n    city: '',\n    tempC: '',\n    tempF: '',\n    WeatherText: '',\n    fiveForecast: [],\n\n  },\n  searchField: '',\n  autoCompleteTxT: [],\n  autoCompleteKey:[]\n\n}\nconst getters = {\n  defaultLocation: state => {\n    return state.defaultLocation;\n  },\n  cityDetails: state => {\n    return state.cityDetails;\n  },\n  fiveForecast: state =>{\n    return state.cityDetails.fiveForecast;\n  },\n  getAutoCompleteTxT: state =>{\n    return state.autoCompleteTxT;\n  }\n}\nconst actions = {\n  setUserLocationByDefault: contex => {\n    navigator.geolocation.getCurrentPosition(position => {\n      contex.state.defaultLocation = position;\n\n      contex.dispatch('getDefaultLocation')\n    })\n  },\n  getDefaultLocation: contex => {\n\n    const lat = contex.state.defaultLocation.coords.latitude;\n    const lon = contex.state.defaultLocation.coords.longitude;\n    const fullURL = contex.getters.gpURL + contex.getters.apikey+ '&q=' + lat + '%2C' + lon + '&language=en&toplevel=true';\n\n          Vue.axios.get(fullURL)\n            .then(response => {\n              const data = response.data;\n              contex.state.cityDetails.city = data.EnglishName;\n              contex.state.cityDetails.key = data.Key;\n              contex.state.cityDetails.regionID = data.Country.ID;\n              contex.dispatch('getWeather');\n              contex.dispatch('getFiveForecast');\n            })\n            .catch(err => {\n              Vue.toasted.show(err.message,contex.getters.toastOptions);\n\n            })\n            \n\n  },\n  getWeather: contex => {\n    const key = contex.state.cityDetails.key;\n    const fullURL = contex.getters.conditionURL + key + \"?apikey=\" + contex.getters.apikey+ \"&language=en&details=true\";\n    Vue.axios.get(fullURL)\n    .then(response =>{\n      const data = response.data;\n      contex.state.cityDetails.tempC = data[0].Temperature.Metric.Value;\n      contex.state.cityDetails.tempF = data[0].Temperature.Imperial.Value;\n      contex.state.cityDetails.WeatherText = data[0].WeatherText;\n    })\n    .catch( err=>{\n      Vue.toasted.show(err.message,contex.getters.toastOptions);\n    })\n  },\n  getFiveForecast: contex =>{\n\n    const key = contex.state.cityDetails.key;\n    const fullURL = contex.getters.fiveForecastURL + key + \"?apikey=\"+ contex.getters.apikey+ \"&language=en&details=true&metric=true\";\n    let Days = ['Sun', 'Mon' , 'Tue' ,'Wed','Thu'];\n    Vue.axios.get(fullURL)\n    .then(response =>{\n      const data = response.data.DailyForecasts;\n      const days =[];\n      for(let i=0;i<data.length;i++)\n      { \n          const day = {Day: Days[i] , Temperature: data[i].Temperature.Maximum.Value};\n          \n          days.push(day);\n      }\n      contex.state.cityDetails.fiveForecast = days;\n\n   \n    })\n    .catch( err=>{\n      Vue.toasted.show(err.message,contex.getters.toastOptions);    })\n  },\n  setAutoComplete: (contex,search) =>{\n\n    if (search !== '' && search !== undefined) {\n\n      const found = contex.state.autoCompleteKey.find(e=> e.cityNameDesc === search);\n      if((typeof found) !== 'undefined')\n      {\n        contex.state.cityDetails.city = found.cityName;\n        contex.state.cityDetails.key = found.key;\n        contex.state.cityDetails.regionID = found.ID;\n        contex.dispatch('getWeather');\n        contex.dispatch('getFiveForecast');\n      }\n      else{\n      const fullURL = contex.getters.autoCompSearchURL + contex.getters.apikey + '&q=' + search + '&language=en';\n      Vue.axios.get(fullURL)\n      .then(response =>{\n        const data = response.data;\n        contex.state.autoCompleteTxT = [];\n        contex.state.autoCompleteKey = [];\n        for(let i=0 ; i < data.length ; i++)\n        {\n          contex.state.autoCompleteTxT.push(data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName);\n          const city = {key: data[i].Key\n          ,cityNameDesc: data[i].LocalizedName + ' , ' + data[i].Country.LocalizedName\n          ,ID: data[i].Country.ID\n          ,cityName:  data[i].LocalizedName}\n          contex.state.autoCompleteKey.push(city);\n        }\n      })\n      .catch( err=>{\n        Vue.toasted.show(err.message,contex.getters.toastOptions);\n\n      })\n    }\n      \n    }\n\n}\n}\n\nconst mutations = {\n\n}\n\nexport default {\n  mutations,\n  actions,\n  getters,\n  state\n}"]}]}